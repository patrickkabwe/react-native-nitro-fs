///
/// JNitroUploadMethod.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

#include <fbjni/fbjni.h>
#include "NitroUploadMethod.hpp"

namespace margelo::nitro::nitrofs {

  using namespace facebook;

  /**
   * The C++ JNI bridge between the C++ enum "NitroUploadMethod" and the the Kotlin enum "NitroUploadMethod".
   */
  struct JNitroUploadMethod final: public jni::JavaClass<JNitroUploadMethod> {
  public:
    static auto constexpr kJavaDescriptor = "Lcom/margelo/nitro/nitrofs/NitroUploadMethod;";

  public:
    /**
     * Convert this Java/Kotlin-based enum to the C++ enum NitroUploadMethod.
     */
    [[maybe_unused]]
    [[nodiscard]]
    NitroUploadMethod toCpp() const {
      static const auto clazz = javaClassStatic();
      static const auto fieldOrdinal = clazz->getField<int>("_ordinal");
      int ordinal = this->getFieldValue(fieldOrdinal);
      return static_cast<NitroUploadMethod>(ordinal);
    }

  public:
    /**
     * Create a Java/Kotlin-based enum with the given C++ enum's value.
     */
    [[maybe_unused]]
    static jni::alias_ref<JNitroUploadMethod> fromCpp(NitroUploadMethod value) {
      static const auto clazz = javaClassStatic();
      static const auto fieldPOST = clazz->getStaticField<JNitroUploadMethod>("POST");
      static const auto fieldPUT = clazz->getStaticField<JNitroUploadMethod>("PUT");
      static const auto fieldPATCH = clazz->getStaticField<JNitroUploadMethod>("PATCH");
      
      switch (value) {
        case NitroUploadMethod::POST:
          return clazz->getStaticFieldValue(fieldPOST);
        case NitroUploadMethod::PUT:
          return clazz->getStaticFieldValue(fieldPUT);
        case NitroUploadMethod::PATCH:
          return clazz->getStaticFieldValue(fieldPATCH);
        default:
          std::string stringValue = std::to_string(static_cast<int>(value));
          throw std::invalid_argument("Invalid enum value (" + stringValue + "!");
      }
    }
  };

} // namespace margelo::nitro::nitrofs

///
/// NitroFS-Swift-Cxx-Umbrella.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#pragma once

// Forward declarations of C++ defined types
// Forward declaration of `HybridNitroFSSpec` to properly resolve imports.
namespace margelo::nitro::nitrofs { class HybridNitroFSSpec; }
// Forward declaration of `NitroFileEncoding` to properly resolve imports.
namespace margelo::nitro::nitrofs { enum class NitroFileEncoding; }
// Forward declaration of `NitroFileStat` to properly resolve imports.
namespace margelo::nitro::nitrofs { struct NitroFileStat; }
// Forward declaration of `NitroFile` to properly resolve imports.
namespace margelo::nitro::nitrofs { struct NitroFile; }
// Forward declaration of `NitroUploadMethod` to properly resolve imports.
namespace margelo::nitro::nitrofs { enum class NitroUploadMethod; }
// Forward declaration of `NitroUploadOptions` to properly resolve imports.
namespace margelo::nitro::nitrofs { struct NitroUploadOptions; }

// Include C++ defined types
#include "HybridNitroFSSpec.hpp"
#include "NitroFile.hpp"
#include "NitroFileEncoding.hpp"
#include "NitroFileStat.hpp"
#include "NitroUploadMethod.hpp"
#include "NitroUploadOptions.hpp"
#include <NitroModules/Promise.hpp>
#include <NitroModules/Result.hpp>
#include <exception>
#include <functional>
#include <memory>
#include <optional>
#include <string>
#include <unordered_map>

// C++ helpers for Swift
#include "NitroFS-Swift-Cxx-Bridge.hpp"

// Common C++ types used in Swift
#include <NitroModules/ArrayBufferHolder.hpp>
#include <NitroModules/AnyMapHolder.hpp>
#include <NitroModules/RuntimeError.hpp>

// Forward declarations of Swift defined types
// Forward declaration of `HybridNitroFSSpec_cxx` to properly resolve imports.
namespace NitroFS { class HybridNitroFSSpec_cxx; }

// Include Swift defined types
#if __has_include("NitroFS-Swift.h")
// This header is generated by Xcode/Swift on every app build.
// If it cannot be found, make sure the Swift module's name (= podspec name) is actually "NitroFS".
#include "NitroFS-Swift.h"
// Same as above, but used when building with frameworks (`use_frameworks`)
#elif __has_include(<NitroFS/NitroFS-Swift.h>)
#include <NitroFS/NitroFS-Swift.h>
#else
#error NitroFS's autogenerated Swift header cannot be found! Make sure the Swift module's name (= podspec name) is actually "NitroFS", and try building the app first.
#endif
